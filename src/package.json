{
  "name": "WarehouseManagement",
  "version": "0.0.3",
  "main": "main.js",
  "scripts": {

    "//": "Building executables from Go code ================================================================",
    "prebuild": "mkdir -p ../app/public/icons/ & mkdir -p ./frontend/src/temp/ & mkdir -p ../app/public/css & mkdir -p ../app/public/js & mkdir -p ../app/vendor/bin/linux32 & mkdir -p ../app/vendor/bin/linux & mkdir -p ../app/vendor/bin/win32 & mkdir -p ../app/vendor/bin/win",
    "build": "npm run build:win & npm run build:linux && npm run build:js && npm run build:jsext && npm run build:css && npm run move",

    "build:win": "npm run build:win32 & npm run build:win64",
    "build:win32": "GOOS=windows GOARCH=386 go build -v -o vendor/bin/win32/app.exe",
    "build:win64": "GOOS=windows GOARCH=amd64 go build -v -o vendor/bin/win/app.exe",

    "build:linux": "npm run build:linux32 & npm run build:linux64",
    "build:linux32": "GOOS=linux GOARCH=386 go build -v -o vendor/bin/linux32/app",
    "build:linux64": "GOOS=linux GOARCH=amd64 go build -v -o vendor/bin/linux/app",

    "//": "Bundling and minifying javascript ================================================================",
    "prebuild:js": "mkdir -p ./frontend/src/temp/",
    "build:js": "npm run build:js:bundle && npm run build:js:uglify",
    "build:js:bundle": "browserify -e ./frontend/src/app.js -o ./frontend/src/temp/app.js -t [ babelify --presets [ es2015 react ] ]", 
    "build:js:uglify": "uglifyjs ./frontend/src/temp/app.js -mc > ../app/public/js/app.js", 

    "//": "Bundling and minifying external javascript ================================================================",
    "prebuild:jsext": "mkdir -p ./frontend/src/temp/ && cp ./frontend/public/dist/jquery.min.js ../app/public/js/jquery.min.js",
    "build:jsext:ls": "cat ./frontend/public/dist/tether.js ./frontend/public/dist/jquery.dataTables.min.js ./frontend/public/dist/dataTables.bootstrap4.min.js ./frontend/public/dist/bootstrap.min.js ./frontend/public/dist/dataTables.select.min.js ./frontend/public/dist/dataTables.scroller.min.js ./frontend/public/dist/dataTables.responsive.min.js ./frontend/public/dist/responsive.bootstrap.min.js ./frontend/public/dist/dataTables.buttons.min.js > ./frontend/src/temp/rawbundle.js",
    "build:jsext": "npm run build:jsext:ls && uglifyjs ./frontend/src/temp/rawbundle.js > ../app/public/js/bundle.js",

    "//": "Bundling and minifying stylesheets ================================================================",
    "prebuild:css": "mkdir -p ./frontend/src/temp/",
    "build:css": "npm run build:css:minify && npm run build:css:compress && npm run build:css:move",
    "build:css:minify": "cat frontend/public/**/*.css | cleancss -d -o ./frontend/src/temp/bundle.css",
    "build:css:compress": "cat ./frontend/src/temp/bundle.css | gzip -9 -c > ./frontend/src/temp/bundle.css.gz",
    "build:css:move": "mv ./frontend/src/temp/*.css ../app/public/css/",

    "//": "Creating main app directory from source for electron-builder ================================================================",
    "move": "npm run move:electronjs & npm run move:icons & npm run move:frontend && npm run move:win32 && npm run move:win && npm run move:linux32 && npm run move:linux",

    "move:win32": "cp -R vendor/bin/win32/ ../app/vendor/bin/",
    "move:win": "cp -R vendor/bin/win/ ../app/vendor/bin/",
    "move:linux32": "cp -R vendor/bin/linux32/ ../app/vendor/bin/",
    "move:linux": "cp -R vendor/bin/linux/ ../app/vendor/bin/",

    "move:electronjs": "cp -R main.js package.json squirrelEvents.js ../app/",
    "move:piece": "npm run move:css && npm run move:style && npm run move:icons && npm run move:frontend",
    "move:icons": "cp -R ./frontend/public/icons/* ../app/public/icons/",
    "move:frontend": "cp -R ./frontend/public/index.html ./frontend/public/Greek.json ../app/public/",

    "start": "./node_modules/bin/electron main.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Tasos Soukoulis",
  "license": "ISC",
  "dependencies": {
    "electron-squirrel-startup": "^1.0.0",
    "jquery": "^3.1.1",
    "rollup-plugin-commonjs": "^5.0.4",
    "rollup-plugin-node-resolve": "^2.0.0"
  },
  "devDependencies": {
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.11.1",
    "babelify": "^7.3.0",
    "clean-css": "^3.4.19",
    "electron": "^1.4.0",
    "optimize-js": "^1.0.1",
    "rollup-plugin-auto-transform": "^1.0.2",
    "rollup-plugin-buble": "^0.14.0",
    "rollup-watch": "^2.5.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/taosx/metalcontainer.git"
  },
  "bugs": {
    "url": "https://github.com/taosx/metalcontainer/issues"
  },
  "homepage": "https://github.com/taosx/metalcontainer#readme",
  "description": "Warehouse metal management system"
}
